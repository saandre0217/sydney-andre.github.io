// /////////////////////////////////////////////////////////////////////////////
// flatten /////////////////////////////////////////////////////////////////////
// /////////////////////////////////////////////////////////////////////////////

function flatten(array) {
  let flatArr = array.reduce((acc, curr) => {
    for(let i = 0; i < curr.length; i++){
      acc.push(curr[i])
    }
    return acc;
  }, [] )
  return flatArr
  }

// /////////////////////////////////////////////////////////////////////////////
// loop ////////////////////////////////////////////////////////////////////////
// /////////////////////////////////////////////////////////////////////////////

function loop(value, test, update, body) {
  if(test(value)){
    body(value)
  } else {
    return;
  }
  

  value = update(value)

  return loop(value, test, update, body)

  }





// /////////////////////////////////////////////////////////////////////////////
// every ///////////////////////////////////////////////////////////////////////
// /////////////////////////////////////////////////////////////////////////////

function every(array, func) {
  if(!func){
    for(let i = 0; i < array.length; i++){
        if(!array[i]){
            return false;
        } 
    }
} else {
    for(let i = 0; i < array.length; i++){
        if(!func(array[i], i, array)){
            return false;
        } 
    }
}
return true;
}

// /////////////////////////////////////////////////////////////////////////////
// dominantDirection ///////////////////////////////////////////////////////////
// /////////////////////////////////////////////////////////////////////////////

function dominantDirection(string) {
let ltr = [];
let rtl = [];

for(let i = 0; i < string.length; i++){
  let script = characterScript(string.charCodeAt(i));

  if(script !== null){
    if(script.direction === 'ltr'){
      ltr.push(script)
    } else{
      rtl.push(script)
    }
  } 
}
if(ltr.length > rtl.length){
  return 'ltr';
} else{
  return 'rtl';
}

}

// /////////////////////////////////////////////////////////////////////////////
//  //////////////////////////////////////////////////////
// /////////////////////////////////////////////////////////////////////////////

if ((typeof process !== 'undefined') &&
  (typeof process.versions.node !== 'undefined')) {
  module.exports = {
    flatten,
    loop,
    every,
    dominantDirection,
  };
};
